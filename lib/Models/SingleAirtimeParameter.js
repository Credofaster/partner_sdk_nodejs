/**
 * CredofasterPartnerApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SingleAirtimeParameter
 */
class SingleAirtimeParameter extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.referenceId = this.constructor.getValue(obj.referenceId || obj.reference_id);
        this.country = this.constructor.getValue(obj.country, 'KE');
        this.accountNo = this.constructor.getValue(obj.accountNo || obj.account_no, '254705126329');
        this.denomination = this.constructor.getValue(obj.denomination);
        this.other = this.constructor.getValue(obj.other);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'referenceId', realName: 'reference_id' },
            { name: 'country', realName: 'country' },
            { name: 'accountNo', realName: 'account_no' },
            { name: 'denomination', realName: 'denomination', type: 'Denomination' },
            { name: 'other', realName: 'other' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SingleAirtimeParameter;
